{"version":3,"sources":["state/action-creators/index.js","App.js","reportWebVitals.js","state/reducers/accountReducer.js","state/reducers/customerReducer.js","state/reducers/index.js","state/store.js","index.js"],"names":["depositMoney","amount","dispatch","type","payload","withdrawMoney","newCustomer","customer","removeCustomer","App","useState","name","setName","account","useSelector","state","customers","useDispatch","bindActionCreators","actionCreators","className","onClick","map","index","id","deleteCustomer","value","onChange","e","target","handleName","uuidv4","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","action","newArray","slice","push","filter","reducers","combineReducers","accountReducer","customerReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ibAAaA,EAAe,SAACC,GACzB,OAAO,SAACC,GACNA,EAAS,CACPC,KAAM,UACNC,QAASH,MAIFI,EAAgB,SAACJ,GAC5B,OAAO,SAACC,GACNA,EAAS,CACPC,KAAM,WACNC,QAASH,MAIFK,EAAc,SAACC,GAC1B,OAAO,SAACL,GACNA,EAAS,CACPC,KAAM,cACNC,QAASG,MAIFC,EAAiB,SAACD,GAC7B,OAAO,SAACL,GACNA,EAAS,CACPC,KAAM,iBACNC,QAASG,M,eCmBFE,MAzCf,WAEE,MAAsBC,mBAAS,IAA/B,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAUC,aAAY,SAACC,GAAD,OAAWA,EAAMF,WACvCG,EAAYF,aAAY,SAACC,GAAD,OAAWA,EAAMR,YACzCL,EAAWe,cACjB,EAAqEC,YACnEC,EACAjB,GAFMM,EAAR,EAAQA,eAAgBF,EAAxB,EAAwBA,YAAaN,EAArC,EAAqCA,aAAcK,EAAnD,EAAmDA,cAiBnD,OACE,sBAAKe,UAAU,MAAf,UACE,0CAAaP,KACb,wBAAQQ,QAAS,kBAAMrB,EAAa,MAApC,qBACA,wBAAQqB,QAAS,kBAAMhB,EAAc,MAArC,sBACDW,EAAUM,KAAI,SAACf,EAAUgB,GACxB,OAAQ,+BAAiBhB,EAASI,KAA1B,IAAiCJ,EAASiB,GAAG,wBAAQH,QAAS,YAVrD,SAACd,GACpBC,EAAeD,GAS8DkB,CAAelB,IAArC,+BAApCgB,MAEpB,yCACA,uBACApB,KAAK,OACLuB,MAAOf,EACPgB,SAAU,SAACC,IAxBG,SAACA,GAChBhB,EAAQgB,EAAEC,OAAOH,OAuBAI,CAAWF,MAE1B,wBAAQP,QAAS,WArBjBf,EAAY,CAACK,KAAKA,EAAMa,GAAGO,iBAqB3B,8BC/BWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCGGQ,EAVD,WAAwB,IAAvB1B,EAAsB,uDAAd,EAAG2B,EAAW,uCACnC,OAAQA,EAAOvC,MACb,IAAK,UACH,OAAOY,EAAQ2B,EAAOtC,QACxB,IAAK,WACH,OAAOW,EAAQ2B,EAAOtC,QACtB,QACI,OAAOW,ICYF0B,EAnBD,WAA6C,IAA5C1B,EAA2C,uDAAnC,CAAC,CAACJ,KAAK,QAASa,GAAG,IAAKkB,EAAW,uCAEpDC,EAAS,GAEb,OAAQD,EAAOvC,MACb,IAAK,cAGD,OAFAwC,EAAW5B,EAAM6B,SACRC,KAAKH,EAAOtC,SACduC,EACX,IAAK,iBAKH,OAJCA,EAAS5B,EAAM+B,QAAO,SAACvC,GACpB,OAAIA,EAASiB,KAAKkB,EAAOtC,QAAQoB,GAAWkB,EAAOtC,QAC5C,QAGX,QACI,OAAOW,ICTJgC,EAJCC,YAAgB,CAC5BnC,QAASoC,EACT1C,SAAU2C,I,OCFDC,EAAQC,YACjBL,EACA,GACAM,YAAgBC,MCEpBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGFO,SAASC,eAAe,SAM1B3B,M","file":"static/js/main.3fc10483.chunk.js","sourcesContent":["export const depositMoney = (amount) => {\r\n    return (dispatch) => {\r\n      dispatch({\r\n        type: \"deposit\",\r\n        payload: amount,\r\n      });\r\n    };\r\n  };\r\n  export const withdrawMoney = (amount) => {\r\n    return (dispatch) => {\r\n      dispatch({\r\n        type: \"withdraw\",\r\n        payload: amount,\r\n      });\r\n    };\r\n  };\r\n  export const newCustomer = (customer) => {\r\n    return (dispatch) => {\r\n      dispatch({\r\n        type: \"newCustomer\",\r\n        payload: customer,\r\n      });\r\n    };\r\n  };\r\n  export const removeCustomer = (customer) => {\r\n    return (dispatch) => {\r\n      dispatch({\r\n        type: \"removeCustomer\",\r\n        payload: customer,\r\n      });\r\n    };\r\n  };","import React, { useState } from 'react';\nimport \"./App.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { actionCreators } from \"./state/index.js\";\nimport { v4 as uuidv4 } from 'uuid';\nfunction App() {\n\n  const [name, setName]=useState(\"\");\n  const account = useSelector((state) => state.account);\n  const customers = useSelector((state) => state.customer);\n  const dispatch = useDispatch();\n  const { removeCustomer, newCustomer, depositMoney, withdrawMoney } = bindActionCreators(\n    actionCreators,\n    dispatch\n  );\n\nconst handleName=(e)=>{\n  setName(e.target.value)\n}\n\n  const addCustomer=()=>{\n    newCustomer({name:name, id:uuidv4()})\n  };\n\n  const deleteCustomer=(customer)=>{\n    removeCustomer(customer)\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Account {account}</h1>\n      <button onClick={() => depositMoney(1000)}>Deposit</button>\n      <button onClick={() => withdrawMoney(500)}>Withdraw</button>\n    {customers.map((customer, index)=>{\n      return (<h3 key={index}>{customer.name} {customer.id}<button onClick={()=>{deleteCustomer(customer)}}>Remove Customer</button></h3>)\n    })}\n   <label>Name</label>\n   <input\n   type=\"text\"\n   value={name}\n   onChange={(e)=>{handleName(e)}}\n   />\n    <button onClick={()=>{addCustomer()}}>Add Customer</button>\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const reducer = (state = 0, action) => {\r\n    switch (action.type) {\r\n      case \"deposit\":\r\n        return state + action.payload;\r\n      case \"withdraw\":\r\n        return state - action.payload;\r\n        default:\r\n            return state\r\n    }\r\n  };\r\n  export default reducer;","const reducer = (state = [{name:\"Simon\", id:0}], action) => {\r\n\r\n    let newArray=[]\r\n\r\n    switch (action.type) {\r\n      case \"newCustomer\":\r\n          newArray = state.slice();\r\n          newArray.push(action.payload);\r\n          return newArray\r\n      case \"removeCustomer\":\r\n         newArray=state.filter((customer)=>{\r\n            if (customer.id!==action.payload.id) return action.payload;\r\n            return null\r\n        })\r\n        return newArray\r\n        default:\r\n            return state\r\n    }\r\n  };\r\n  export default reducer;","import { combineReducers} from \"redux\";\r\nimport accountReducer from './accountReducer';\r\nimport customerReducer from './customerReducer';\r\nconst reducers= combineReducers({\r\n    account: accountReducer,\r\n    customer: customerReducer\r\n});\r\nexport default reducers","import { createStore, applyMiddleware } from \"redux\";\r\nimport reducers from \"./reducers/index\";\r\nimport thunk from \"redux-thunk\"\r\nexport const store = createStore(\r\n    reducers, \r\n    {},\r\n    applyMiddleware(thunk)\r\n    );","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\"\nimport { store } from \"./state/store\"\n\nReactDOM.render(\n  <React.StrictMode>\n  <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}